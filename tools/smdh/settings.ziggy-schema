root = ApplicationSettings

@unrestricted = enum { inactive, pending, unrestricted },

struct ApplicationSettings {
    titles: Titles,
    flags: Flags,
    ratings: Ratings,
    region_lockout: ?RegionLock,
    eula_version: EulaVersion,
    matchmaking_id: int,
    matchmaking_bit_id: int,
    optimal_animation_frame: float,
    streetpass_id: int,
}

struct Flags {
    visible: bool,
    autoboot: bool,
    allow_3d: bool,
    require_eula: bool,
    autosave: bool,
    extended_banner: bool,
    required_game_rating: bool,
    uses_save_data: bool,
    record_app_usage: bool, 
    disable_sd_backups: bool,
    new_3ds_exclusive: bool,
}

struct Titles {
    japanese: ?Title,
    english: Title,
    french: ?Title,
    german: ?Title,
    italian: ?Title,
    spanish: ?Title,
    simplified_chinese: ?Title,
    korean: ?Title,
    dutch: ?Title,
    portuguese: ?Title,
    russian: ?Title,
    traditional_chinese: ?Title,
}

struct Title {
    title: bytes,
    description: bytes,
    publisher: bytes,
}

struct RegionLock {
    japan: bool,
    north_america: bool,
    europe: bool,
    australia: bool,
    china: bool,
    korea: bool,
    taiwan: bool,
}

struct unrestricted {
    kind: @unrestricted,
}

struct restricted {
    age: int,
}

struct Ratings {
    cero: restricted | unrestricted,
    esrb: restricted | unrestricted,
    usk: restricted | unrestricted,
    pegi_gen: restricted | unrestricted,
    pegi_prt: restricted | unrestricted,
    pegi_bbfc: restricted | unrestricted,
    cob: restricted | unrestricted,
    grb: restricted | unrestricted,
    cgsrr: restricted | unrestricted,
}

struct EulaVersion {
    major: int,
    minor: int,
}

